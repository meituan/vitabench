name: full_trajectory_no_rubrics_eval_template
chinese: |-
  # 系统信息
  {env_info}

  # 用户完整指令
  {user_instruction}

  # 背景说明
  - 这是一个user与assistant之间的对话场景，其中assistant可以调用工具获取信息和完成操作，工具返回结果将以tool开头
  - 你需要评估用户指令是否被完成
  - <trajectory_content>包含了user与assistant之间的完整对话内容

  # 任务
  - 基于对话内容，判断用户完整指令中所有子需求是否被全部完成
  
  # 注意事项
  - 重要：所有的评估以assistant的回复及工具调用请求是否完成用户指令为准，user在对话中表达的内容仅视为对assistant的提示和引导，不会直接影响评估标准，一切以用户指令为准！
  - 重要：查询类tool返回的结果仅对assistant可见，并不代表assistant对用户推荐的内容，因此也不直接影响评估结果，一切都要以assistant获取信息后对用户的回复为准！同时需要注意，Assistant 也不能编造 Tool 的返回结果！
  - 重要：对于购买类指令（涉及到订单细节，必须生成订单的），必须确认assistant是否真的完成了下单操作。有可能assistant误以为完成了下单操作，实际上工具调用失败；或user表示可以“可以自己下单”等情况，都应视为未满足要求
  - 对于涉及到订单细节如商品数量、送达时间的用户指令，必须严格满足原始用户指令要求（不能有商品数量偏差，不得晚于期望送达时间），用户妥协行为不影响评判结果（例如user表示“某商品少点也行”、“对订单内容没有异议”或“晚点送达也行”等），这类情况仍应视为未满足要求
  - 对于涉及到文本内容匹配的地址或订单备注类的用户指令，采用功能等效原则：只要实际内容能实现相同功能（如大致定位配送地点或传达顾客的主要需求），即使表述不完全一致或缺少部分细节，也视为满足要求
  - 在justification中记录与用户指令有关的关键信息、判断是否完成的依据及其对应的轮次[x]

  # 格式要求
  - 你的回复应为一个JSON对象，包含以下字段：
  - `justification`：对评估结果的简要解释
  - `meetExpectation`：评估结果（true或false）
 
  # 示例输入结构：
  <trajectory_content>xxx</trajectory_content>

  # 示例回复结构：
  ```json
  {{
      "justification": "<对评估结果的简要解释>",
      "meetExpectation": <true or false>
  }}
  ```

english: |-
  # System Information
  {env_info}

  # User Complete Instruction
  {user_instruction}

  # Background
  - This is a conversation scenario between a user and an assistant, where the assistant can call tools to retrieve information and complete operations. Tool return results will start with "tool"
  - You need to evaluate whether the user instruction has been completed
  - <trajectory_content> contains the complete conversation content between the user and assistant

  # Task
  - Based on the conversation content, determine whether all sub-requirements in the user's complete instruction have been fully completed
  
  # Important Notes
  - Important: All evaluations are based on whether the assistant's responses and tool call requests complete the user instruction. User expressions in the conversation are only considered as guidance for the assistant and do not directly affect evaluation standards. Everything is based on the user instruction!
  - Important: Query tool return results are only visible to the assistant and do not represent content recommended by the assistant to users, so they do not directly affect evaluation results either. Everything must be based on the assistant's responses to users after obtaining information! Also note that Assistant cannot fabricate Tool return results!
  - Important: For purchase instructions (involving order details that must generate orders), must confirm whether the assistant actually completed the ordering operation. The assistant may mistakenly believe they completed the ordering operation when in fact the tool call failed; or situations where the user states they "can place the order themselves," etc., should all be considered as not meeting the requirements
  - For user instructions involving order details such as product quantity or delivery time, must strictly meet the original user instruction requirements (no deviation in product quantities, delivery must not be later than the expected time). User compromise behavior does not affect evaluation results (for example, when a user states "fewer items is okay", "I have no objections to the order content" or "later delivery is fine" etc.). These situations should still be considered as not meeting the requirements
  - For user instructions involving text content matching of addresses or order notes, apply the functional equivalence principle: as long as the actual content can achieve the same function (such as roughly locating the delivery location or conveying the customer's main needs), it is considered to meet the requirements even if the expression is not completely consistent or lacks some details
  - Record key information related to the user instruction, basis for determining completion, and their corresponding round [x] in justification

  # Format Requirements
  - Your response should be a JSON object containing the following fields:
  - `justification`: brief explanation of the evaluation result
  - `meetExpectation`: evaluation result (true or false)
 
  # Example Input Structure:
  <trajectory_content>xxx</trajectory_content>

  # Example Response Structure:
  ```json
  {{
      "justification": "<brief explanation of the evaluation result>",
      "meetExpectation": <true or false>
  }}
  ```
